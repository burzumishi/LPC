
This file documents some specific details of unarmed combat.

Unarmed combat is implemented as a separate object that can be inherited
into the living object. It manages the setting of the attacks and hitlocation
values. For each attack the following function can be used:

	set_attack_unarmed(int aid,       /* The attacks id (see 'combat')
			   int wchit,     /* The wc 'to hit' value */
			   int wcpen,     /* The wc penetration */
			   int dt,        /* The damage type */
	                   int puse,      /* %use */
		           string adesc)  /* Attack description */

As can be seen this is the exact same parameters as sent to add_attack with
one parameter added for description of the attack. For non tool users this
will be exactly equivalent to using add_attack() and your own cr_attack_desc(),
see /doc/examples/tiger1.c and /doc/examples/tiger2.c for an example of this.

Similarly for each hit location the following function can be used:

	set_hitloc_unarmed(int hid,      /* The hitloc id (see 'combat') */
	 		   int *ac,      /* The ac for the damage types */
			   int phit,     /* The %hit */
			   string hdesc) /* Hitloc description */

As you can see this is exactly the same as for add_hitloc(). It is still
relevant as the object will manage cr_configure() for you.

For tool users, the combat object will automatically set the attack and
hitlocation values back to the above given when weapons and / or armours are
removed.


There are two different objects that can be
inherited:

	/std/combat/unarmed
		This is the 'open' version. You can define what attacks
		and hitlocations you like. 
		NOTE!
		If you have a humanoid with more than the predefined
		attacks and hitlocations you must use this object.

	/std/combat/humunarmed
		This is the 'closed' version. There is predefined
		attacks and hitlocations, and you can only change the
		values for them.

	
	*
	* Doc is to be continued
	*
	* Example: /doc/examples/mobiles/tiger.c uses /std/combat/unarmed.c
	*

		



